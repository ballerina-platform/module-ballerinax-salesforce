/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

ext.ballerinaLangVersion = project.ballerinaLangVersion

allprojects {
    group = project.group
    version = project.version

    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/ballerina-lang'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    dependencies {}
}

def ballerinaDistributionPath = "/usr/lib/ballerina"
def artifactCacheParent = file("${project.projectDir}/build/cache_parent/")
def packageName = "sfdc"
def packageOrg = "ballerinax"
def pathToBala = file("${project.projectDir}/sfdc/target/bala")
def platform = "java11"

project('compiler-plugin') {
    test {
        onlyIf {
            project.hasProperty("compilerPluginTests")
        }
    }
}

task createBalaDirectory {
    mkdir "${project.projectDir}/sfdc/target/bala"
}

task copyDistribution {
    inputs.dir file(project.projectDir)

    pathToBala.eachFileMatch(~/.*.bala/) { balaFile ->
        copy {
            from zipTree(balaFile)
            into file("${artifactCacheParent}/bala/${packageOrg}/${packageName}/${project.version}/${platform}")
        }
    }
    copy {
        from file("${project.projectDir}/sfdc/target/cache")
        exclude '**/*-testable.jar'
        exclude '**/tests_cache/'
        into file("${artifactCacheParent}/cache/")
    }
    outputs.dir artifactCacheParent
}

task createArtifactZip(type: Zip) {
    from "${buildDir}/cache_parent"
    archiveName 'distribution.zip'
    destinationDir(file("${buildDir}/distribution"))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: createArtifactZip, extension: 'zip'
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/module-ballerinax-sfdc")
            credentials {
                username = System.getenv("publishUser")
                password = System.getenv("publishPAT")
            }
        }
    }
}

publish.dependsOn copyDistribution
